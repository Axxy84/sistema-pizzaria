#!/usr/bin/env python
import os
import sys

# Setup Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'DjangoProject.settings')
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

import django
django.setup()

from django.db import transaction
from apps.pedidos.models import Pedido, ItemPedido
from apps.pedidos.models_mesa import Mesa
from apps.clientes.models import Cliente, Endereco
from apps.financeiro.models import MovimentoCaixa, Caixa, ContaPagar
from apps.estoque.models import MovimentoEstoque

print("=== RESETANDO BANCO DE DADOS PARA TESTES REAIS ===\n")

# Confirma√ß√£o de seguran√ßa
resposta = input("‚ö†Ô∏è  ATEN√á√ÉO: Isso vai APAGAR todos os pedidos, clientes e movimenta√ß√µes!\nTem certeza? (digite 'SIM' para confirmar): ")

if resposta != 'SIM':
    print("\nOpera√ß√£o cancelada.")
    exit(0)

print("\nüóëÔ∏è  Iniciando limpeza do banco de dados...\n")

try:
    with transaction.atomic():
        # 1. Limpar Movimenta√ß√µes Financeiras
        print("Removendo movimenta√ß√µes financeiras...")
        MovimentoCaixa.objects.all().delete()
        ContaPagar.objects.all().delete()
        print(f"  ‚úÖ Movimenta√ß√µes financeiras removidas")
        
        # 2. Limpar Movimenta√ß√µes de Estoque
        print("\nRemovendo movimenta√ß√µes de estoque...")
        MovimentoEstoque.objects.all().delete()
        print(f"  ‚úÖ Movimenta√ß√µes de estoque removidas")
        
        # 3. Limpar Itens de Pedido
        print("\nRemovendo itens de pedidos...")
        itens_count = ItemPedido.objects.count()
        ItemPedido.objects.all().delete()
        print(f"  ‚úÖ {itens_count} itens de pedido removidos")
        
        # 4. Limpar Pedidos
        print("\nRemovendo pedidos...")
        pedidos_count = Pedido.objects.count()
        Pedido.objects.all().delete()
        print(f"  ‚úÖ {pedidos_count} pedidos removidos")
        
        # 5. Limpar Mesas
        print("\nRemovendo mesas...")
        mesas_count = Mesa.objects.count()
        Mesa.objects.all().delete()
        print(f"  ‚úÖ {mesas_count} mesas removidas")
        
        # 6. Limpar Endere√ßos e Clientes
        print("\nRemovendo clientes e endere√ßos...")
        enderecos_count = Endereco.objects.count()
        clientes_count = Cliente.objects.count()
        Endereco.objects.all().delete()
        Cliente.objects.all().delete()
        print(f"  ‚úÖ {clientes_count} clientes removidos")
        print(f"  ‚úÖ {enderecos_count} endere√ßos removidos")
        
        # 7. Resetar Caixas
        print("\nResetando caixas...")
        Caixa.objects.all().update(
            saldo_inicial=0,
            saldo_atual=0,
            total_entradas=0,
            total_saidas=0
        )
        print(f"  ‚úÖ Caixas resetados")
        
        print("\n‚ú® Limpeza conclu√≠da com sucesso!")
        
except Exception as e:
    print(f"\n‚ùå Erro durante a limpeza: {str(e)}")
    exit(1)

# Mostrar estat√≠sticas finais
print("\nüìä ESTAT√çSTICAS FINAIS:")
print(f"  Pedidos: {Pedido.objects.count()}")
print(f"  Clientes: {Cliente.objects.count()}")
print(f"  Mesas: {Mesa.objects.count()}")
print(f"  Movimenta√ß√µes Financeiras: {MovimentoCaixa.objects.count()}")
print(f"  Movimenta√ß√µes de Estoque: {MovimentoEstoque.objects.count()}")

print("\nüéØ Sistema pronto para receber dados reais!")
print("\nDicas para come√ßar:")
print("1. Crie alguns clientes de teste")
print("2. Abra o caixa do dia")
print("3. Crie pedidos com dados reais")
print("4. Teste o fluxo completo: Recebido ‚Üí Preparando ‚Üí Entregue")